import pandas as pd
import streamlit as st
from src.services.streamlit_service import (
    generate_ai_summary,
    generate_area_comparison,
    generate_comparison_chart,
    load_data,
)

# Configura√ß√£o inicial da p√°gina
st.set_page_config(
    page_title="An√°lise ENEM: Internet e Desempenho",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded",
)

# T√≠tulo e introdu√ß√£o
st.title("üìä Impacto do Acesso √† Internet no Desempenho do ENEM")
st.markdown(
    """
Esta an√°lise investiga se estudantes sem acesso √† internet em casa t√™m desempenho significativamente inferior no ENEM, mesmo quando consideramos o n√≠vel de renda familiar.
"""
)

try:
    df = load_data()
except Exception as e:
    st.error(f"Erro ao carregar dados: {e}")
    st.stop()

# Sidebar com filtros
st.sidebar.header("‚öôÔ∏è Configura√ß√µes R√°pidas")

# Controles
AREA_OPTIONS = {
    "M√©dia Geral": "NU_NOTA_MEDIA",
    "Ci√™ncias da Natureza": "NU_NOTA_CN",
    "Ci√™ncias Humanas": "NU_NOTA_CH",
    "Linguagens": "NU_NOTA_LC",
    "Matem√°tica": "NU_NOTA_MT",
    "Reda√ß√£o": "NU_NOTA_REDACAO",
}

selected_area = st.sidebar.selectbox(
    "√Årea de An√°lise:", list(AREA_OPTIONS.keys()), index=0
)

chart_type = st.sidebar.radio(
    "Tipo de Gr√°fico:",
    ("Boxplot Simplificado", "Histograma Agregado", "M√©dias Comparadas"),
    index=0,
)


# Layout principal
tab1, tab2, tab3 = st.tabs(
    ["üìä An√°lise Principal", "üìà Compara√ß√£o entre √Åreas", "‚ÑπÔ∏è Sobre o Projeto"]
)

with tab1:
    st.header(f"An√°lise de {selected_area}")

    # Gr√°fico principal com loader
    with st.spinner("Gerando visualiza√ß√£o..."):
        chart = generate_comparison_chart(
            df, AREA_OPTIONS[selected_area], chart_type, selected_area
        )
        st.plotly_chart(chart, use_container_width=True)

    # M√©tricas r√°pidas
    st.subheader("Principais Estat√≠sticas")

    col1, col2, col3 = st.columns(3)
    with col1:
        mean_with = df[df["INTERNET"] == "Tem internet em casa"][
            AREA_OPTIONS[selected_area]
        ].mean()
        st.metric("M√©dia com Internet", f"{mean_with:.1f}")

    with col2:
        mean_without = df[df["INTERNET"] == "N√£o tem internet em casa"][
            AREA_OPTIONS[selected_area]
        ].mean()
        st.metric("M√©dia sem Internet", f"{mean_without:.1f}")

    with col3:
        diff = mean_with - mean_without
        st.metric("Diferen√ßa", f"{diff:.1f}", f"{(diff/mean_without*100):.1f}%")

    # Se√ß√£o de sum√°rio por IA
    st.subheader("üìù Sum√°rio Anal√≠tico (IA Generativa)")

    # Pr√©-agrega os dados para o sum√°rio
    summary_data = df.groupby("INTERNET", observed=True)[
        AREA_OPTIONS[selected_area]
    ].describe()

    if st.button("Gerar Sum√°rio Autom√°tico"):
        with st.spinner("Gerando sum√°rio com IA..."):
            ai_summary = generate_ai_summary(summary_data, selected_area, chart_type)
            st.markdown(f"**Sum√°rio:**\n\n{ai_summary}")

            # Op√ß√£o para copiar o sum√°rio
            if st.button("Copiar An√°lise"):
                st.clipboard(ai_summary)


with tab2:
    st.header("Compara√ß√£o entre √Åreas do Conhecimento")

    with st.spinner("Gerando compara√ß√£o entre √°reas..."):
        area_chart = generate_area_comparison(df, AREA_OPTIONS)
        st.plotly_chart(area_chart, use_container_width=True)

    # Tabela resumida otimizada
    st.subheader("Dados Resumidos por √Årea")

    summary_data = []
    for area_name, area_col in AREA_OPTIONS.items():
        if area_name == "M√©dia Geral":
            continue
        group_stats = df.groupby("INTERNET", observed=True)[area_col].agg(
            ["mean", "median", "std"]
        )
        group_stats["√Årea"] = area_name
        summary_data.append(group_stats.reset_index())

    summary_df = pd.concat(summary_data)
    st.dataframe(
        summary_df.pivot(index="√Årea", columns="INTERNET", values=["mean", "median"]),
        use_container_width=True,
    )

    # Sum√°rio por IA para compara√ß√£o entre √°reas
    st.subheader("üìù An√°lise Comparativa (IA Generativa)")

    if st.button("Gerar An√°lise Comparativa"):
        with st.spinner("Gerando an√°lise com IA..."):
            # Pr√©-agrega dados comparativos
            comparison_data = summary_df.groupby("√Årea").agg(
                {"mean": ["max", "min", "mean"], "median": ["max", "min"]}
            )

            ai_comparison = generate_ai_summary(
                comparison_data, "Compara√ß√£o entre √Åreas", "Tabela Comparativa"
            )
            st.markdown(f"**An√°lise Comparativa:**\n\n{ai_comparison}")

            # Op√ß√£o para copiar a an√°lise
            if st.button("Copiar An√°lise"):
                st.clipboard(ai_comparison)


with tab3:
    st.header("Sobre o Projeto")

    st.markdown(
        """
    ### Objetivo
    Esta an√°lise investiga se estudantes sem acesso √† internet em casa t√™m desempenho significativamente inferior 
    no ENEM, mesmo quando consideramos o n√≠vel de renda familiar.
    
    ### Metodologia
    - **Fonte de dados**: Microdados do ENEM (INEP)
    - **Amostra**: 100.000 participantes (exemplo)
    - **Vari√°veis analisadas**:
      - Notas por √°rea do conhecimento
      - Acesso √† internet em casa (Q025)
      - Renda familiar (Q006)
    
    ### Limita√ß√µes
    - An√°lise correlacional, n√£o causal
    - N√£o controla por todas as vari√°veis de confus√£o
    - Dados s√£o ilustrativos (substitua pelo seu dataframe real)
    
    ### Pr√≥ximos Passos
    - Adicionar mais vari√°veis de controle
    - Analisar dados de m√∫ltiplos anos
    - Implementar modelos estat√≠sticos mais sofisticados
    """
    )

    st.markdown(
        """
    **Desenvolvido por**: [Matheus Fabi√£o](https://github.com/matheusfabiao)  
    **Fonte dos dados**: [INEP/MEC](https://www.gov.br/inep/pt-br/acesso-a-informacao/dados-abertos/microdados/enem) 
    **Tecnologias utilizadas**: Python, Pandas, Plotly, Streamlit, OpenAI API
    """
    )

# Rodap√©
st.sidebar.markdown("---")
st.sidebar.markdown(
    """
**Dicas de Uso**:
- Comece pela an√°lise geral
- Experimente diferentes tipos de gr√°fico
- Compare entre √°reas do conhecimento
"""
)

st.sidebar.markdown("---")
st.sidebar.markdown(
    """
**Feito por:** [Matheus Fabi√£o](https://github.com/matheusfabiao)  
**Fonte dos dados:** [INEP/MEC](https://www.gov.br/inep/pt-br/acesso-a-informacao/dados-abertos/microdados/enem)
"""
)
